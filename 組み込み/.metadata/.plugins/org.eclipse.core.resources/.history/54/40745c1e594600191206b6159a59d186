/*
 * mecanum.c
 *
 *  Created on: 2017/11/05
 *      Author: okada_tech
 */


#include "omni_wheel.h"

void motor_move(uint8_t comand,uint16_t digree,uint16_t power){
		  switch(comand){

		  case 125:

					if(digree>=0 && digree<=360){
					if(digree>=0 && digree<=60){
						power1=(float)sin((60-digree)*M_PI/180)*power;
						power2=(float)sin((180-digree)*M_PI/180)*power;
						power3=(float)sin((300-digree)*M_PI/180)*-1*power;
						temp1=max(power1,power2);
						y=max(power3,temp1);
						power1=power1*((float)power/y);
						power2=power2*((float)power/y);
						power3=power3*((float)power/y);
						motor1(0,power1);
						motor2(0,power2);
						motor3(power3,0);
					}
					else if(digree>60 && digree<=120){
						power1=(float)sin((digree-60)*M_PI/180)*power;
						power2=(float)sin((180-digree)*M_PI/180)*power;
						power3=(float)sin((300-digree)*M_PI/180)*-1*power;
						temp1=max(power1,power2);
						y=max(power3,temp1);
						power1=power1*((float)power/y);
						power2=power2*((float)power/y);
						power3=power3*((float)power/y);
						motor1(power1,0);
						motor2(0,power2);
						motor3(power3,0);
							  }

					else if(digree>120 && digree<=180){
						power1=(float)sin((digree-60)*M_PI/180)*power;
						power2=(float)sin((180-digree)*M_PI/180)*power;
						power3=(float)sin((300-digree)*M_PI/180)*power;
						temp1=max(power1,power2);
						y=max(power3,temp1);
						power1=power1*((float)power/y);
						power2=power2*((float)power/y);
						power3=power3*((float)power/y);
						motor1(power1,0);
						motor2(0,power2);
						motor3(0,power3);
					}
					else if(digree>180 && digree<=240){
						power1=(float)sin((digree-60)*M_PI/180)*power;
						power2=(float)sin((180-digree)*M_PI/180)*-1*power;
						power3=(float)sin((300-digree)*M_PI/180)*power;
						temp1=max(power1,power2);
						y=max(power3,temp1);
						power1=power1*((float)power/y);
						power2=power2*((float)power/y);
						power3=power3*((float)power/y);
						motor1(power1,0);
						motor2(power2,0);
						motor3(0,power3);
					}
					else if(digree>240 && digree<=360){
						power1=(float)sin((digree-60)*M_PI/180)*-1*power;
						power2=(float)sin((digree-180)*M_PI/180)*power;
						power3=(float)sin((300-digree)*M_PI/180)*power;
						temp1=max(power1,power2);
						y=max(power3,temp1);
						power1=power1*((float)power/y);
						power2=power2*((float)power/y);
						power3=power3*((float)power/y);
						motor1(power1,0);
						motor2(power2,0);
						motor3(power3,0);
					}
					}
				else{
					motor1(0,0);
					motor2(0,0);
					motor3(0,0);
				}

		  break;


		  case 150://LS
				motor1(0,power);
				motor2(0,power);
				motor3(power,0);
		  break;

		  case 200://RS
				motor1(power,0);
				motor2(power,0);
				motor3(0,power);
		  break;

		  default:
				motor1(0,0);
			    motor2(0,0);
			    motor3(0,0);
		  break;
		  }
	}

void HOUI_Correction(){
	HOUI=JY901_yaw_get(HOUI_def);
if(HOUI>= 5 && HOUI<=355){
	motor1(1000,1000);
	motor2(1000,1000);
	motor3(1000,1000);
	while(HOUI>=5 && HOUI<=355){
	HOUI=JY901_yaw_get(HOUI_def);
	if(HOUI<180){
	motor1(0,(int)map_m(HOUI,0,180,200,500));
	motor2(0,(int)map_m(HOUI,0,180,200,500));
	motor3((int)map_m(HOUI,0,180,200,500),0);
	//xprintf("LS now");
	//xprintf(" speed= %d\r\n",(int)map_m(HOUI,0,180,70,300));
	}
	else{
		motor1((int)map_m(HOUI,359,180,200,500),0);
		motor2((int)map_m(HOUI,359,180,200,500),0);
		motor3(0,(int)map_m(HOUI,359,180,200,500));
		//xprintf("RS now");
		//xprintf(" speed= %d\r\n",(int)map_m(HOUI,359,180,70,300));
	}
	}
	motor1(1000,1000);
	motor2(1000,1000);
	motor3(1000,1000);
}
}

int max(int a,int b){
	if(a>b){return a;}
	else{return b;}
}
long map_m(long x, long in_min, long in_max, long out_min, long out_max) {
	  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
	}
