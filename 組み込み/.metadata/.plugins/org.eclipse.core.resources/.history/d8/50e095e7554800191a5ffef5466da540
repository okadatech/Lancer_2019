/*
 * sensor.c
 *
 *  Created on: 2018/01/22
 *      Author: okada_tech
 */


#include "sensor.h"


const int Brightness_const=1500;

void line_get_data(){

}


uint16_t line_get_marker(){
	uint8_t data=0;
	line_get_data();
	if(Linedata_R[0]>Brightness_const ||Linedata_R[1]>Brightness_const||Linedata_R[2]>Brightness_const||
			Linedata_L[0]>Brightness_const||Linedata_L[1]>Brightness_const||Linedata_L[2]>Brightness_const){
		data=1;
		if(Line_data_temp==2){
			data=10;
		}
		else if(Line_data_temp==0){
			Line_data_temp=2;
		}
		else{
		Line_data_temp=1;}
	}
	else{
		Line_data_temp=0;
	}
	return data;
}

uint16_t line_get_angle(){
	int angle_data=0;
	int cnt;
	int place_1[12],place_2[12];

	angle_1=0;
	angle_2=0;

	line_get_data();

	cnt=0;
	for(int i=0;i<12;i++){
	if(Linedata[i]<Brightness_const){
			place_1[cnt]=i;
			cnt++;
		}
	}
	for(int i=0;i<cnt;i++){
		angle_1=15*place_1[i];
	}
	angle_1=angle_1/cnt;

	cnt=0;
	for(int i=12;i<25;i++){
	if(Linedata[i-12]<Brightness_const){
			place_2[cnt]=i-12;
			cnt++;
		}
	}
	for(int i=0;i<cnt;i++){
		angle_2=15*place_2[i];
	}
	angle_2=angle_2/cnt;
	angle_data=myAtan2(sin(angle_1)+sin(angle_2),cos(angle_1)+cos(angle_2));

	return angle_data;
}

uint16_t line_get_data_poorly_made(){
	line_get_data();
	if(Linedata[0]>Brightness_const && Linedata[1]<Brightness_const && Linedata[23]<Brightness_const){
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_1,0);
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_0,1);
		HAL_GPIO_WritePin(GPIOB,GPIO_PIN_9,0);
		return 0;
	}

	else if(Linedata[0]>Brightness_const && Linedata[1]>Brightness_const){
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_1,1);
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_0,0);
		HAL_GPIO_WritePin(GPIOB,GPIO_PIN_9,0);
		return 7;
	}
	else if(Linedata[0]>Brightness_const && Linedata[23]>Brightness_const){
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_1,0);
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_0,0);
		HAL_GPIO_WritePin(GPIOB,GPIO_PIN_9,1);
		return 353;
	}

	else if(Linedata[1]>Brightness_const && Linedata[2]<Brightness_const){
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_1,1);
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_0,0);
		HAL_GPIO_WritePin(GPIOB,GPIO_PIN_9,0);
		return 15;
	}
	else if(Linedata[23]>Brightness_const && Linedata[22]<Brightness_const){
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_1,0);
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_0,0);
		HAL_GPIO_WritePin(GPIOB,GPIO_PIN_9,1);
		return 345;
	}

	else if(Linedata[1]>Brightness_const && Linedata[2]>Brightness_const){
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_1,1);
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_0,0);
		HAL_GPIO_WritePin(GPIOB,GPIO_PIN_9,0);
		return 22;
	}
	else if(Linedata[23]>Brightness_const && Linedata[22]>Brightness_const){
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_1,0);
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_0,0);
		HAL_GPIO_WritePin(GPIOB,GPIO_PIN_9,1);
		return 338;
	}

	else if(Linedata[2]>Brightness_const && Linedata[3]<Brightness_const){
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_1,1);
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_0,0);
		HAL_GPIO_WritePin(GPIOB,GPIO_PIN_9,0);
		return 30;
	}
	else if(Linedata[22]>Brightness_const && Linedata[21]<Brightness_const){
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_1,0);
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_0,0);
		HAL_GPIO_WritePin(GPIOB,GPIO_PIN_9,1);
		return 330;
	}

	else if(Linedata[2]>Brightness_const && Linedata[3]>Brightness_const){
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_1,1);
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_0,0);
		HAL_GPIO_WritePin(GPIOB,GPIO_PIN_9,0);
		return 37;
	}
	else if(Linedata[22]>Brightness_const && Linedata[21]>Brightness_const){
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_1,0);
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_0,0);
		HAL_GPIO_WritePin(GPIOB,GPIO_PIN_9,1);
		return 353;
	}


	else if(Linedata[3]>Brightness_const && Linedata[4]<Brightness_const){
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_1,1);
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_0,0);
		HAL_GPIO_WritePin(GPIOB,GPIO_PIN_9,0);
		return 45;
	}
	else if(Linedata[21]>Brightness_const && Linedata[20]<Brightness_const){
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_1,0);
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_0,0);
		HAL_GPIO_WritePin(GPIOB,GPIO_PIN_9,1);
		return 315;
	}

	else if(Linedata[3]>Brightness_const && Linedata[4]>Brightness_const){
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_1,1);
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_0,0);
		HAL_GPIO_WritePin(GPIOB,GPIO_PIN_9,0);
		return 52;
	}
	else if(Linedata[21]>Brightness_const && Linedata[20]>Brightness_const){
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_1,0);
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_0,0);
		HAL_GPIO_WritePin(GPIOB,GPIO_PIN_9,1);
		return 308;
	}


	else if(Linedata[4]>Brightness_const && Linedata[5]<Brightness_const){
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_1,1);
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_0,0);
		HAL_GPIO_WritePin(GPIOB,GPIO_PIN_9,0);
		return 60;
	}
	else if(Linedata[20]>Brightness_const && Linedata[19]<Brightness_const){
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_1,0);
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_0,0);
		HAL_GPIO_WritePin(GPIOB,GPIO_PIN_9,1);
		return 300;
	}

	else if(Linedata[4]>Brightness_const && Linedata[5]>Brightness_const){
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_1,1);
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_0,0);
		HAL_GPIO_WritePin(GPIOB,GPIO_PIN_9,0);
		return 67;
	}
	else if(Linedata[20]>Brightness_const && Linedata[19]>Brightness_const){
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_1,0);
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_0,0);
		HAL_GPIO_WritePin(GPIOB,GPIO_PIN_9,1);
		return 293;
	}

	else if(Linedata[5]>Brightness_const && Linedata[6]<Brightness_const){
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_1,1);
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_0,0);
		HAL_GPIO_WritePin(GPIOB,GPIO_PIN_9,0);
		return 75;
	}
	else if(Linedata[19]>Brightness_const && Linedata[18]<Brightness_const){
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_1,0);
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_0,0);
		HAL_GPIO_WritePin(GPIOB,GPIO_PIN_9,1);
		return 285;
	}


	else if(Linedata[6]>Brightness_const && Linedata[7]>Brightness_const){
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_1,1);
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_0,0);
		HAL_GPIO_WritePin(GPIOB,GPIO_PIN_9,0);
		return 82;
	}
	else if(Linedata[19]>Brightness_const && Linedata[18]>Brightness_const){
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_1,0);
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_0,0);
		HAL_GPIO_WritePin(GPIOB,GPIO_PIN_9,1);
		return 278;
	}


	else if(Linedata[8]>Brightness_const && Linedata[7]<Brightness_const){
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_1,1);
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_0,0);
		HAL_GPIO_WritePin(GPIOB,GPIO_PIN_9,0);
		return 90;
	}
	else if(Linedata[18]>Brightness_const && Linedata[19]<Brightness_const){
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_1,0);
		HAL_GPIO_WritePin(GPIOE,GPIO_PIN_0,0);
		HAL_GPIO_WritePin(GPIOB,GPIO_PIN_9,1);
		return 270;
	}


	else{return 10000;}
}



uint16_t line_get_deviation(){
	int deviation_data=0;
	line_get_data();

	deviation_data=45*sin(-line_get_angle()-angle_2);

	return deviation_data;
}
