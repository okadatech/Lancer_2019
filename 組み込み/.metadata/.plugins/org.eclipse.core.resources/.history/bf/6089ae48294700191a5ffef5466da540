/*
 * sensor.c
 *
 *  Created on: 2018/01/22
 *      Author: okada_tech
 */


#include "sensor.h"


const int Brightness_const=2000;

void line_get_data(){
	    Linedata_R[0]=ADCdata4[2];
	    Linedata_R[1]= ADCdata4[3];
	    Linedata_R[2]= ADCdata4[4];

	    Linedata_L[0]= ADCdata4[1];
	    Linedata_L[1]= ADCdata4[0];
	    Linedata_L[2]= ADCdata3[10];

		Linedata[0]=ADCdata1[0];
		Linedata[1]=ADCdata1[1];
		Linedata[2]=ADCdata1[2];
		Linedata[3]=ADCdata1[3];
		Linedata[4]=ADCdata1[4];
		Linedata[5]=ADCdata1[5];
		Linedata[6]=ADCdata1[6];
		Linedata[7]=ADCdata1[7];
		Linedata[8]=ADCdata1[8];
		Linedata[9]=ADCdata2[0];
		Linedata[10]=ADCdata2[1];
		Linedata[11]=ADCdata2[2];
		Linedata[12]=ADCdata2[3];
		Linedata[13]=ADCdata2[4];
		Linedata[14]=ADCdata3[0];
		Linedata[15]=ADCdata3[1];
		Linedata[16]=ADCdata3[2];
		Linedata[17]=ADCdata3[3];
		Linedata[18]=ADCdata3[4];
		Linedata[19]=ADCdata3[5];
		Linedata[20]=ADCdata3[6];
		Linedata[21]=ADCdata3[7];
		Linedata[22]=ADCdata3[8];
		Linedata[23]=ADCdata3[9];

}


uint16_t line_get_marker(){
	uint8_t R_tempdata=0,L_tempdata=0,data=0;
	line_get_data();
	if(Linedata_R[0]>Brightness_const){
		data=data&0b000000100;
		R_tempdata=1;
	}
	if(Linedata_R[1]>Brightness_const){
		data=data&0b000001000;
		R_tempdata=1;
	}
	if(Linedata_R[2]>Brightness_const){
		data=data&0b000010000;
		R_tempdata=1;
	}
	if(R_tempdata==1){
		data=data&0b00000001;
	}

	if(Linedata_L[0]>Brightness_const){
		data=data&0b000100000;
		L_tempdata=1;
	}
	if(Linedata_L[1]>Brightness_const){
		data=data&0b001000000;
		L_tempdata=1;
	}
	if(Linedata_L[2]>Brightness_const){
		data=data&0b010000000;
		L_tempdata=1;
	}
	if(L_tempdata==1){
		data=data&0b10000000;
	}

	return data;
}

uint16_t line_get_angle(){
	int angle_data=0;
	int cnt;
	int place_1[12],place_2[12];

	angle_1=0;
	angle_2=0;

	line_get_data();

	cnt=0;
	for(int i=0;i<12;i++){
	if(Linedata[i]<Brightness_const){
			place_1[cnt]=i;
			cnt++;
		}
	}
	for(int i=0;i<cnt;i++){
		angle_1=15*place_1[i];
	}
	angle_1=angle_1/cnt;

	cnt=0;
	for(int i=12;i<25;i++){
	if(Linedata[i-12]<Brightness_const){
			place_2[cnt]=i-12;
			cnt++;
		}
	}
	for(int i=0;i<cnt;i++){
		angle_2=15*place_2[i];
	}
	angle_2=angle_2/cnt;
	angle_data=myAtan2(sin(angle_1)+sin(angle_2),cos(angle_1)+cos(angle_2));

	return angle_data;
}

uint16_t line_get_data_poorly_made(){

}



uint16_t line_get_deviation(){
	int deviation_data=0;
	line_get_data();

	deviation_data=45*sin(-line_get_angle()-angle_2);

	return deviation_data;
}
